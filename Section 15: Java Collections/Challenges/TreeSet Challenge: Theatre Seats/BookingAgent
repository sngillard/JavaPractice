package dev.lpa;

public class BookingAgent {

    public static void main(String[] args) {

        int rows = 10;
        int totalSeats = 100;
        Theatre rodgersNYC = new Theatre("Richard Rodgers",
                rows, totalSeats);

        rodgersNYC.printSeatMap();
        //prints seat map of the theater

        bookSeat(rodgersNYC, 'A', 3);
        bookSeat(rodgersNYC, 'A', 3); //will print A3 with unicode symbol dot bc it's been reserved

        bookSeat(rodgersNYC, 'B', 1);
        bookSeat(rodgersNYC, 'B', 11);
        bookSeat(rodgersNYC, 'M', 1);

        bookSeats(rodgersNYC, 4, 'B', 3, 10);
        bookSeats(rodgersNYC, 6, 'B', 'C', 3, 10);
        //in above example, we need 6 seats in a row(contiguous) but there are not 6 in a row in row B, so it books them in row C
        bookSeats(rodgersNYC, 4, 'B', 'C', 1, 10);
        //above, we want 4 contiguous seats in row B or C but the request failed as there were not
        bookSeats(rodgersNYC, 1, 'B', 'C', 1, 10);
        bookSeats(rodgersNYC, 4, 'M', 'Z', 1, 10);
        //above will print: "Invalid! 4 seats between M[1-10]-J[1-10] try again: Seat must be between A001 and J010
        //Sorry! No matching contiguous seats in rows: M - Z"
        bookSeats(rodgersNYC, 10, 'A', 'E', 1, 10);
    }

    //method to book a set
    private static void bookSeat(Theatre theatre, char row, int seatNo) {

        String seat = theatre.reserveSeat(row, seatNo);
        if (seat != null) { //if seat is empty, book it
            System.out.println("Congratulations! Your reserved seat is " + seat);
            theatre.printSeatMap();
        } else { //if seat is not empty, tell them unable to reserve that seat
            System.out.println("Sorry! Unable to reserve " + row + seatNo);
        }
    }

    private  static void bookSeats(Theatre theatre, int tickets, char minRow, int minSeat, int maxSeat) {

        bookSeats(theatre, tickets, minRow, minRow, minSeat, maxSeat);
    }

    private static void bookSeats(Theatre theatre, int tickets, char minRow, char maxRow, int minSeat, int maxSeat) {

        var seats = theatre.reserveSeats(tickets, minRow, maxRow, minSeat, maxSeat);
        if (seats != null) {
            System.out.println("Congratulations! Your reserved seats are " + seats);
            theatre.printSeatMap();
        } else {
            System.out.println("Sorry! No matching contiguous seats in rows: " + minRow + " - " + maxRow);
        }
    }
}
