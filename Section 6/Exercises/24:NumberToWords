public class NumberToWords {
    public static void numberToWords(int number){
        if(number < 0) {
            System.out.println("Invalid Value");
        }
        else {
            int reversed = reverse(number);
            int count = getDigitCount(number);
            
            while(count > 0) {
                int lastDigit = reversed % 10;
                reversed = reversed / 10;
                count--;
                
                switch (lastDigit) {
                       case 0:
                           System.out.println("Zero");
                           break;
                       case 1:
                           System.out.println("One");
                           break;
                       case 2:
                           System.out.println("Two");
                           break;
                       case 3:
                           System.out.println("Three");
                           break;
                       case 4:
                           System.out.println("Four");
                           break;
                       case 5:
                           System.out.println("Five");
                           break;
                       case 6:
                           System.out.println("Six");
                           break;
                       case 7:
                           System.out.println("Seven");
                           break;
                       case 8:
                           System.out.println("Eight");
                           break;
                       case 9:
                           System.out.println("Nine");
                           break;
                       default:
                           System.out.println();
                   }
               }
        }
    }

    public static int reverse(int number) {
        int reversed = 0;
        if(number < 0) {
            number = -1 * number;
            
            while (number > 0) {
                int lastDigit = number % 10;
                reversed = lastDigit + reversed * 10;
                number /= 10;
           }
           return - reversed;
       }
       
       while (number > 0) {
           int lastDigit = number % 10;
           reversed = lastDigit + reversed * 10;
           number /= 10;
       }
        return reversed;
    }

    public static int getDigitCount(int num) {
        if(num < 0) {
            return -1;
        }
        else if(num == 0) {
            return 1;
        }
        int count = 0;
        while(num > 0) {
            count++;
            num /= 10;
        }
        return count;
    }
}




/*Example Input/Output - getDigitCount method

* getDigitCount(0); should return 1 since there is only 1 digit

* getDigitCount(123); should return 3

* getDigitCount(-12); should return -1 since the parameter is negative

* getDigitCount(5200); should return 4 since there are 4 digits in the number

Example Input/Output - reverse method

* reverse(-121); should  return -121

* reverse(1212); should return  2121

* reverse(1234); should return 4321

* reverse(100); should return 1

Example Input/Output - numberToWords method

* numberToWords(123); should print "One Two Three".

* numberToWords(1010); should print "One Zero One Zero".

* numberToWords(1000); should print "One Zero Zero Zero".

* numberToWords(-12); should print "Invalid Value" since the parameter is negative.
*/
